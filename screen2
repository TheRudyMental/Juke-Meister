package Screen;

import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Priority;
import javafx.scene.layout.RowConstraints;
import javafx.scene.layout.VBox;

public class Screen_2 extends GridPane implements ScreenInterface{

	private static Screen_2 instance;

	private Screen_2() {
		setConstraints();
		makeComponents();
	}

	/**
	 * The getInstance method returns the singleton instance of the screen
	 *  @return instance
	 */
	public static ScreenInterface getInstance(){
		if(instance != null){
			return instance;
		}
		else{
			instance = new Screen_2();
			return instance;
		}
	}

	/**
	 * This method is a helper to the constructor of the class to make itself
	 * without having an extremely long constructor
	 *
	 */
	private void setConstraints(){

	
	     ColumnConstraints col1 = new ColumnConstraints();
	     col1.setPercentWidth(20);
	     ColumnConstraints col2 = new ColumnConstraints();
	     col2.setPercentWidth(60);
	     ColumnConstraints col3 = new ColumnConstraints();
	     col3.setPercentWidth(20);
	     
	     this.getColumnConstraints().addAll(col1,col2,col3);

	     RowConstraints row1 = new RowConstraints();
	     row1.setPercentHeight(10);
	     RowConstraints row2 = new RowConstraints();
	     row2.setPercentHeight(60);
	     RowConstraints row3 = new RowConstraints();
	     row3.setPercentHeight(30);
	    
	     this.getRowConstraints().addAll(row1,row2,row3);

	}

	/**
	 * This method defines the components on the screen and adds them to it.
	 */
	private void makeComponents(){

		Button back = new Button("Back");
		//Add listener for the button later
		back.setMinSize(0, 0);
		back.setMaxSize(Double.MAX_VALUE, Double.MAX_VALUE);
		this.add(back,0,0);
	
		
		Label volume = new Label("Volume");
		VBox vbox = new VBox();
        vbox.setAlignment(Pos.CENTER);
		vbox.getChildren().add(volume);
	
		Slider volumeSlider = new Slider();        
		volumeSlider.setPrefWidth(70);
		volumeSlider.setMaxWidth(Double.MAX_VALUE);
		volumeSlider.setMinWidth(0);
		 
		vbox.getChildren().add(volumeSlider);
		VBox.setVgrow(vbox, Priority.ALWAYS);
		this.add(vbox, 1, 2);
		GridPane gridpane2 = new GridPane();
		
		//another grid layout inside the grid
		ColumnConstraints subcol1 = new ColumnConstraints();
		subcol1.setPercentWidth(40);
		ColumnConstraints subcol2 = new ColumnConstraints();
		subcol2.setPercentWidth(20);
		ColumnConstraints subcol3 = new ColumnConstraints();
		subcol3.setPercentWidth(40);
	    gridpane2.getColumnConstraints().addAll(subcol1,subcol2,subcol3);
		
	    RowConstraints subrow1 = new RowConstraints();
		subrow1.setPercentHeight(40);
		RowConstraints subrow2 = new RowConstraints();
		subrow2.setPercentHeight(20);
		RowConstraints subrow3 = new RowConstraints();
		subrow3.setPercentHeight(40);
		gridpane2.getRowConstraints().addAll(subrow1,subrow2,subrow3);
		
		
		Button stat = new Button("Statistics Screen");
		stat.setMinSize(0, 0);
		stat.setMaxSize(Double.MAX_VALUE, Double.MAX_VALUE);
		stat.setWrapText(true);
		gridpane2.add(stat,0,0);
		
		
		Button lib = new Button("Song Library");
		//Add listener for the button later
		lib.setMinSize(0, 0);
		lib.setMaxSize(Double.MAX_VALUE, Double.MAX_VALUE);
		lib.setWrapText(true);
		gridpane2.add(lib,2,0);
		
		
		Button credit = new Button("Credit Options");
		//Add listener for the button later
		credit.setMinSize(0, 0);
		credit.setMaxSize(Double.MAX_VALUE, Double.MAX_VALUE);
		credit.setWrapText(true);
		gridpane2.add(credit,0,2);
		
		Button extra = new Button("Extra Options");
		//Add listener for the button later
		extra.setMinSize(0, 0);
		extra.setMaxSize(Double.MAX_VALUE, Double.MAX_VALUE);
		extra.setWrapText(true);
		gridpane2.add(extra,2,2);
		
		this.add(gridpane2,1,1);
		
	
	}//end makeComponents
	
}
